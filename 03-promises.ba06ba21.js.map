{"mappings":"gfAAA,IAWIA,EAXJC,EAAAC,EAAA,SAGMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBACxCF,EAAOM,iBAAiB,UASxB,SAAsBC,GAIpB,GAHAA,EAAMC,iBACNX,EAASY,OAAOJ,EAASK,OACzBC,EAAYF,OAAOL,EAAOM,OACtBb,GAAU,GAAKc,GAAa,GAAKF,OAAON,EAAQO,MAAQ,GAExD,YADFZ,EAAAc,OAAOC,QAAS,iCAGhBC,EAVW,EAUaL,OAAON,EAAQO,QACvCK,EAAiBC,KAAKC,MACtBV,EAAMW,cAAcC,O,IAdxB,IACIJ,EADAJ,EAAY,EAkBhB,SAASG,EAAcM,EAAUC,GAC3BxB,IAAWuB,GAGG,IAAIE,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,IAIFU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAeG,EAALF,MACjBG,GAAY,EACZ,IAAIC,EAA8D,IAAlDR,KAAKS,OAAOnB,KAAKC,MAAQF,GAAkB,KAC3DjB,EAAAc,OAAOwB,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAgBI,OAAVH,EAAU,OAEjEpB,EAAcmB,EAAUtB,E,IAGzB2B,OAAM,SAAAN,G,IAAGC,EAAQD,EAARH,SAAeG,EAALF,MAClBG,GAAY,EACZ,IAAIC,EAA8D,IAAlDR,KAAKS,OAAOnB,KAAKC,MAAQF,GAAkB,KAC3DjB,EAAAc,OAAOC,QAAQ,sBAAqCwB,OAAfJ,EAAS,QAAgBI,OAAVH,EAAU,OAE9DpB,EAAcmB,EAAUtB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport '../css/common.css'\n\nconst formEl = document.querySelector('form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nformEl.addEventListener('submit', onFormSubmit);\n\n\n\nlet amount;\nlet stepDelay = 0;\nlet formSubmitTime;\nlet position = 0;\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  amount = Number(amountEl.value);\n  stepDelay = Number(stepEl.value);\n  if (amount <= 0 || stepDelay <= 0 || Number(delayEl.value < 0)) {\n    Notify.failure(`❌ All values must be positive`);\n    return;\n  } else {\n    createPromise(position, Number(delayEl.value));\n    formSubmitTime = Date.now();\n    event.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  if (amount === position) {\n    return;\n  } else {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        position += 1;\n        let deltaTime = Math.round((Date.now() - formSubmitTime) / 100) * 100;\n        Notify.success(`✅ Fulfilled promise ${position} in ${deltaTime}ms`);\n        delay += stepDelay;\n        createPromise(position, stepDelay);\n      })\n\n      .catch(({ position, delay }) => {\n        position += 1;\n        let deltaTime = Math.round((Date.now() - formSubmitTime) / 100) * 100;\n        Notify.failure(`❌ Rejected promise ${position} in ${deltaTime}ms`);\n        delay += stepDelay;\n        createPromise(position, stepDelay);\n      });\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$amount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","addEventListener","event","preventDefault","Number","value","$ce04d3a99e08e73b$var$stepDelay","Notify","failure","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$formSubmitTime","Date","now","currentTarget","reset","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","_$position","deltaTime","round","success","concat","catch"],"version":3,"file":"03-promises.ba06ba21.js.map"}